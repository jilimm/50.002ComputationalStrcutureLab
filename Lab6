*Lab 6: Cerating Beta machine in jsim*


*SUM: input is A,B,C output is Z
.subckt sum3 a b c z
Xxor a b x xor2
Xxor1 x c z xor2
.ends
*Cout: input is A,B,C output is Z
.subckt cout3 a b c z 
Xnand1 a b w nand2
Xnand2 a c x nand2
Xnand3 b c y nand2
Xnand4 w x y z nand3
.ends
*FA full bit adder: input is A,B,Cin output is S, Cout
.subckt FA a b ci s co
XSUM a b ci s sum3
XCarry a b ci co cout3
.ends 
.subckt adder32 A[31:0] B[31:0] s[31:0] 
Xid3 A0 B0 0 S0 C0 FA
Xid4 A[31:1] B[31:1] C[30:0] S[31:1] C[31:1] FA
.ends

.subckt pc clk reset ia[31:0]
Xregister32 d[31:0] clk#32 ia[31:0] dreg
Xmux32 reset#32 S[31:0] 0#32 d[31:0] mux2
.connect temp[2] vdd
.connect temp[31:3] 0
.connect temp[1:0] 0
Xadd4 ia[31:0] temp[31:0] S[31:0] adder32
.ends

.subckt regfile clk werf ra2sel ra[4:0] rb[4:0] rc[4:0]
+ wdata[31:0] radata[31:0] rbdata[31:0]
… your register file circuit here … .ends
